#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case 2}", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 55, 800, 850),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case 2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 55, 800, 830),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \ \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \ \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 55, 800, 830),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\ \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \\ \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 55, 800, 830),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\phantom{sw} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \\phantom{sw} \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 55, 800, 830),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\phantom{s} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \\phantom{s} \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 55, 800, 830),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\phantom{} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \\phantom{} \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 55, 800, 830),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 55, 800, 830),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 55, 800, 830),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 52, 800, 820),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 47, 800, 822),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
#import Python data set
df_emp_gen_error_curve_long <- py$df_emp_gen_error_curve_long
#data sets for plot
# Add a circle on top of the ggplot object at x=3, y=0.5 with a white interior
df_circle_high_variance = data.frame('x' = 130, 'y' = 0.3)
df_circle_high_bias = data.frame('x' = 830, 'y' = 0.42)
#text dataframe
df_text = data.frame("label" = c(TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{1}$", output = "character"),
TeX(input = "$\\uparrow$Bias", output = "character"),
TeX(input = "$\\textbf{Case} \\phantom{.} \\textbf{2}$", output = "character"),
TeX(input = "$\\uparrow$Variance", output = "character")),
"x" = c(60, 47, 800, 825),
"y" = c(0.35, 0.28, 0.35, 0.28))
color_palette <-c('gen_error' = '#002241',
'emp_loss' ='#9ECAE1')
#import python data sets
plot_bias_var_rules <- ggplot(data = df_emp_gen_error_curve_long,
mapping = aes(x = training_sample_size, y = error_value,
group = error_type, color = error_type)) +
geom_point(inherit.aes = F, data = df_circle_high_variance,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241", size = 70) +
geom_point(inherit.aes = F, data = df_circle_high_bias,
mapping = aes(x=x, y=y), shape = 1, color =  "#002241",  size = 70) +
geom_line(size = 1) +
geom_hline(yintercept = 0.40, color = "#002241", linetype = "dashed")  +
geom_text(inherit.aes = F, data = df_text,
mapping=aes(x=x, y=y, label=label),
size=6, color="#002241", parse=T) +
scale_y_continuous(name = 'Mean Squared Error')+
scale_x_continuous(name = "Sample Size for Empirical Loss")  +
scale_color_manual(name = "Function Type",
values = color_palette,
labels = c(emp_loss = 'Empirical Loss', gen_error = 'Generalization Error')) +
#custom styling
theme_classic(base_family = 'Helvetica', base_size = 14) +
theme(legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
axis.title  = element_text(size = 15),
axis.text = element_text(size = 14, color = "#002241"),
text = element_text(color = "#002241"),
axis.line = element_line(color = "#002241"),
axis.ticks = element_line(color =  "#002241"))
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6)
ggsave(filename = "images/plot_bias_var_rules.png", plot = plot_bias_var_rules, width = 10, height = 6, dpi = 1000)
reticulate::repl_python()
